name: "Beta Release"

on:
  push:
    branches:
      - beta
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publish-beta:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Set up Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          registry-url: "https://registry.npmjs.org/"

      - name: "Install dependencies"
        run: npm ci

      - name: "Create build"
        run: npm run build

      - name: "Get version from package.json and create beta version"
        id: get_version
        run: |
          BASE_VERSION=$(node -p 'require("./package.json").version')
          COMMIT_SHA=$(git rev-parse --short HEAD)
          BETA_VERSION="$BASE_VERSION-beta.$(date +%Y%m%d%H%M%S).$COMMIT_SHA"
          echo "version=$BETA_VERSION" >> $GITHUB_OUTPUT
          echo "Beta version: $BETA_VERSION"

      - name: "Update package.json with beta version"
        run: |
          npm version ${{ steps.get_version.outputs.version }} --no-git-tag-version

      - name: "Set Git user name and email"
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: "Publish beta to NPM"
        run: npm publish --tag beta --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: "Create GitHub Release (Pre-release)"
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: v${{ steps.get_version.outputs.version }} (Beta)
          body: |
            ðŸš§ **Beta Release** ðŸš§
            
            This is a beta release from the `beta` branch.
            
            To install this beta version:
            ```bash
            npm install @browserstack/mcp-server@beta
            # or specify the exact version:
            npm install @browserstack/mcp-server@${{ steps.get_version.outputs.version }}
            ```
            
            **Note:** This version is not tagged as `latest` and won't be installed by default.
            
            Published by ${{ github.actor }}
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}